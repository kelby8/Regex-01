grammar grammarKS ;

SEMI : ';'  ;
WHILE : 'while'  ;
LP : '(' ;
RP : ')' ;
IF : 'if' ;
ELSE : 'else' ;
RETURN : 'return' ;
LBR : '{' ;
RBR : '}' ;
NUM : [0-9]+ ;
OR : 'or' ;
AND : 'and' ;
NOT : 'not' ;
RELOP : '>=' | '<=' | '>' | '<' | '!=' | '==' ;
PLUS : '+' ;
MULOP : '*' | '/' | '%' ;
MINUS : '-' ;
WHITESPACE : [ \t\r\n]+ -> skip ;

program : braceblock ;
stmts : stmt stmts |  ;
stmt : cond | loop | return_stmt SEMI ;
loop : WHILE LP expr RP braceblock ;
cond : IF LP expr RP braceblock | IF LP expr RP braceblock ELSE braceblock ;
braceblock : LBR stmts RBR ;
expr : orexp ;
orexp : orexp OR andexp | andexp ;
andexp : andexp AND notexp | notexp ;
notexp : NOT notexp | rel ;
rel : sum RELOP sum | sum ;
sum : sum PLUS term | sum MINUS term | term ;
term : term MULOP neg | neg ;
neg : MINUS neg | factor ;
factor : NUM | LP expr RP ;
return_stmt : RETURN expr ;