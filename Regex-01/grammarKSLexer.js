// Generated from grammarKS.txt by ANTLR 4.8
// jshint ignore: start
var antlr4 = require('antlr4/index');



var serializedATN = ["\u0003\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964",
    "\u0002\u0019\u00b3\b\u0001\u0004\u0002\t\u0002\u0004\u0003\t\u0003\u0004",
    "\u0004\t\u0004\u0004\u0005\t\u0005\u0004\u0006\t\u0006\u0004\u0007\t",
    "\u0007\u0004\b\t\b\u0004\t\t\t\u0004\n\t\n\u0004\u000b\t\u000b\u0004",
    "\f\t\f\u0004\r\t\r\u0004\u000e\t\u000e\u0004\u000f\t\u000f\u0004\u0010",
    "\t\u0010\u0004\u0011\t\u0011\u0004\u0012\t\u0012\u0004\u0013\t\u0013",
    "\u0004\u0014\t\u0014\u0004\u0015\t\u0015\u0004\u0016\t\u0016\u0004\u0017",
    "\t\u0017\u0004\u0018\t\u0018\u0003\u0002\u0003\u0002\u0003\u0003\u0003",
    "\u0003\u0003\u0003\u0003\u0003\u0007\u00038\n\u0003\f\u0003\u000e\u0003",
    ";\u000b\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003",
    "\u0003\u0003\u0003\u0007\u0003C\n\u0003\f\u0003\u000e\u0003F\u000b\u0003",
    "\u0005\u0003H\n\u0003\u0003\u0003\u0003\u0003\u0003\u0004\u0003\u0004",
    "\u0003\u0004\u0003\u0004\u0003\u0004\u0003\u0004\u0003\u0005\u0003\u0005",
    "\u0003\u0006\u0003\u0006\u0003\u0007\u0003\u0007\u0003\u0007\u0003\b",
    "\u0003\b\u0003\b\u0003\b\u0003\b\u0003\t\u0003\t\u0003\t\u0003\t\u0003",
    "\t\u0003\t\u0003\t\u0003\n\u0003\n\u0003\u000b\u0003\u000b\u0003\f\u0006",
    "\fj\n\f\r\f\u000e\fk\u0003\r\u0003\r\u0003\r\u0003\u000e\u0003\u000e",
    "\u0003\u000e\u0003\u000e\u0003\u000f\u0003\u000f\u0003\u000f\u0003\u000f",
    "\u0003\u0010\u0003\u0010\u0003\u0010\u0003\u0010\u0003\u0010\u0003\u0010",
    "\u0003\u0010\u0003\u0010\u0003\u0010\u0005\u0010\u0082\n\u0010\u0003",
    "\u0011\u0003\u0011\u0003\u0012\u0003\u0012\u0003\u0013\u0003\u0013\u0003",
    "\u0014\u0003\u0014\u0003\u0015\u0003\u0015\u0003\u0015\u0003\u0015\u0003",
    "\u0015\u0003\u0015\u0003\u0015\u0003\u0015\u0003\u0015\u0003\u0015\u0003",
    "\u0015\u0003\u0015\u0003\u0015\u0003\u0015\u0003\u0015\u0005\u0015\u009b",
    "\n\u0015\u0003\u0016\u0003\u0016\u0003\u0016\u0003\u0016\u0007\u0016",
    "\u00a1\n\u0016\f\u0016\u000e\u0016\u00a4\u000b\u0016\u0003\u0016\u0003",
    "\u0016\u0003\u0017\u0006\u0017\u00a9\n\u0017\r\u0017\u000e\u0017\u00aa",
    "\u0003\u0018\u0006\u0018\u00ae\n\u0018\r\u0018\u000e\u0018\u00af\u0003",
    "\u0018\u0003\u0018\u00039\u0002\u0019\u0003\u0003\u0005\u0004\u0007",
    "\u0005\t\u0006\u000b\u0007\r\b\u000f\t\u0011\n\u0013\u000b\u0015\f\u0017",
    "\r\u0019\u000e\u001b\u000f\u001d\u0010\u001f\u0011!\u0012#\u0013%\u0014",
    "\'\u0015)\u0016+\u0017-\u0018/\u0019\u0003\u0002\t\u0003\u0002\f\f\u0003",
    "\u00022;\u0004\u0002>>@@\u0005\u0002\'\',,11\u0003\u0002$$\u0005\u0002",
    "2;C\\c|\u0005\u0002\u000b\f\u000f\u000f\"\"\u0002\u00c0\u0002\u0003",
    "\u0003\u0002\u0002\u0002\u0002\u0005\u0003\u0002\u0002\u0002\u0002\u0007",
    "\u0003\u0002\u0002\u0002\u0002\t\u0003\u0002\u0002\u0002\u0002\u000b",
    "\u0003\u0002\u0002\u0002\u0002\r\u0003\u0002\u0002\u0002\u0002\u000f",
    "\u0003\u0002\u0002\u0002\u0002\u0011\u0003\u0002\u0002\u0002\u0002\u0013",
    "\u0003\u0002\u0002\u0002\u0002\u0015\u0003\u0002\u0002\u0002\u0002\u0017",
    "\u0003\u0002\u0002\u0002\u0002\u0019\u0003\u0002\u0002\u0002\u0002\u001b",
    "\u0003\u0002\u0002\u0002\u0002\u001d\u0003\u0002\u0002\u0002\u0002\u001f",
    "\u0003\u0002\u0002\u0002\u0002!\u0003\u0002\u0002\u0002\u0002#\u0003",
    "\u0002\u0002\u0002\u0002%\u0003\u0002\u0002\u0002\u0002\'\u0003\u0002",
    "\u0002\u0002\u0002)\u0003\u0002\u0002\u0002\u0002+\u0003\u0002\u0002",
    "\u0002\u0002-\u0003\u0002\u0002\u0002\u0002/\u0003\u0002\u0002\u0002",
    "\u00031\u0003\u0002\u0002\u0002\u0005G\u0003\u0002\u0002\u0002\u0007",
    "K\u0003\u0002\u0002\u0002\tQ\u0003\u0002\u0002\u0002\u000bS\u0003\u0002",
    "\u0002\u0002\rU\u0003\u0002\u0002\u0002\u000fX\u0003\u0002\u0002\u0002",
    "\u0011]\u0003\u0002\u0002\u0002\u0013d\u0003\u0002\u0002\u0002\u0015",
    "f\u0003\u0002\u0002\u0002\u0017i\u0003\u0002\u0002\u0002\u0019m\u0003",
    "\u0002\u0002\u0002\u001bp\u0003\u0002\u0002\u0002\u001dt\u0003\u0002",
    "\u0002\u0002\u001f\u0081\u0003\u0002\u0002\u0002!\u0083\u0003\u0002",
    "\u0002\u0002#\u0085\u0003\u0002\u0002\u0002%\u0087\u0003\u0002\u0002",
    "\u0002\'\u0089\u0003\u0002\u0002\u0002)\u009a\u0003\u0002\u0002\u0002",
    "+\u009c\u0003\u0002\u0002\u0002-\u00a8\u0003\u0002\u0002\u0002/\u00ad",
    "\u0003\u0002\u0002\u000212\u0007=\u0002\u00022\u0004\u0003\u0002\u0002",
    "\u000234\u00071\u0002\u000245\u0007,\u0002\u000259\u0003\u0002\u0002",
    "\u000268\u000b\u0002\u0002\u000276\u0003\u0002\u0002\u00028;\u0003\u0002",
    "\u0002\u00029:\u0003\u0002\u0002\u000297\u0003\u0002\u0002\u0002:<\u0003",
    "\u0002\u0002\u0002;9\u0003\u0002\u0002\u0002<=\u0007,\u0002\u0002=H",
    "\u00071\u0002\u0002>?\u00071\u0002\u0002?@\u00071\u0002\u0002@D\u0003",
    "\u0002\u0002\u0002AC\n\u0002\u0002\u0002BA\u0003\u0002\u0002\u0002C",
    "F\u0003\u0002\u0002\u0002DB\u0003\u0002\u0002\u0002DE\u0003\u0002\u0002",
    "\u0002EH\u0003\u0002\u0002\u0002FD\u0003\u0002\u0002\u0002G3\u0003\u0002",
    "\u0002\u0002G>\u0003\u0002\u0002\u0002HI\u0003\u0002\u0002\u0002IJ\b",
    "\u0003\u0002\u0002J\u0006\u0003\u0002\u0002\u0002KL\u0007y\u0002\u0002",
    "LM\u0007j\u0002\u0002MN\u0007k\u0002\u0002NO\u0007n\u0002\u0002OP\u0007",
    "g\u0002\u0002P\b\u0003\u0002\u0002\u0002QR\u0007*\u0002\u0002R\n\u0003",
    "\u0002\u0002\u0002ST\u0007+\u0002\u0002T\f\u0003\u0002\u0002\u0002U",
    "V\u0007k\u0002\u0002VW\u0007h\u0002\u0002W\u000e\u0003\u0002\u0002\u0002",
    "XY\u0007g\u0002\u0002YZ\u0007n\u0002\u0002Z[\u0007u\u0002\u0002[\\\u0007",
    "g\u0002\u0002\\\u0010\u0003\u0002\u0002\u0002]^\u0007t\u0002\u0002^",
    "_\u0007g\u0002\u0002_`\u0007v\u0002\u0002`a\u0007w\u0002\u0002ab\u0007",
    "t\u0002\u0002bc\u0007p\u0002\u0002c\u0012\u0003\u0002\u0002\u0002de",
    "\u0007}\u0002\u0002e\u0014\u0003\u0002\u0002\u0002fg\u0007\u007f\u0002",
    "\u0002g\u0016\u0003\u0002\u0002\u0002hj\t\u0003\u0002\u0002ih\u0003",
    "\u0002\u0002\u0002jk\u0003\u0002\u0002\u0002ki\u0003\u0002\u0002\u0002",
    "kl\u0003\u0002\u0002\u0002l\u0018\u0003\u0002\u0002\u0002mn\u0007q\u0002",
    "\u0002no\u0007t\u0002\u0002o\u001a\u0003\u0002\u0002\u0002pq\u0007c",
    "\u0002\u0002qr\u0007p\u0002\u0002rs\u0007f\u0002\u0002s\u001c\u0003",
    "\u0002\u0002\u0002tu\u0007p\u0002\u0002uv\u0007q\u0002\u0002vw\u0007",
    "v\u0002\u0002w\u001e\u0003\u0002\u0002\u0002xy\u0007@\u0002\u0002y\u0082",
    "\u0007?\u0002\u0002z{\u0007>\u0002\u0002{\u0082\u0007?\u0002\u0002|",
    "\u0082\t\u0004\u0002\u0002}~\u0007#\u0002\u0002~\u0082\u0007?\u0002",
    "\u0002\u007f\u0080\u0007?\u0002\u0002\u0080\u0082\u0007?\u0002\u0002",
    "\u0081x\u0003\u0002\u0002\u0002\u0081z\u0003\u0002\u0002\u0002\u0081",
    "|\u0003\u0002\u0002\u0002\u0081}\u0003\u0002\u0002\u0002\u0081\u007f",
    "\u0003\u0002\u0002\u0002\u0082 \u0003\u0002\u0002\u0002\u0083\u0084",
    "\u0007?\u0002\u0002\u0084\"\u0003\u0002\u0002\u0002\u0085\u0086\u0007",
    "-\u0002\u0002\u0086$\u0003\u0002\u0002\u0002\u0087\u0088\t\u0005\u0002",
    "\u0002\u0088&\u0003\u0002\u0002\u0002\u0089\u008a\u0007/\u0002\u0002",
    "\u008a(\u0003\u0002\u0002\u0002\u008b\u008c\u0007k\u0002\u0002\u008c",
    "\u008d\u0007p\u0002\u0002\u008d\u009b\u0007v\u0002\u0002\u008e\u008f",
    "\u0007u\u0002\u0002\u008f\u0090\u0007v\u0002\u0002\u0090\u0091\u0007",
    "t\u0002\u0002\u0091\u0092\u0007k\u0002\u0002\u0092\u0093\u0007p\u0002",
    "\u0002\u0093\u009b\u0007i\u0002\u0002\u0094\u0095\u0007f\u0002\u0002",
    "\u0095\u0096\u0007q\u0002\u0002\u0096\u0097\u0007w\u0002\u0002\u0097",
    "\u0098\u0007d\u0002\u0002\u0098\u0099\u0007n\u0002\u0002\u0099\u009b",
    "\u0007g\u0002\u0002\u009a\u008b\u0003\u0002\u0002\u0002\u009a\u008e",
    "\u0003\u0002\u0002\u0002\u009a\u0094\u0003\u0002\u0002\u0002\u009b*",
    "\u0003\u0002\u0002\u0002\u009c\u00a2\u0007$\u0002\u0002\u009d\u009e",
    "\u0007^\u0002\u0002\u009e\u00a1\u0007$\u0002\u0002\u009f\u00a1\n\u0006",
    "\u0002\u0002\u00a0\u009d\u0003\u0002\u0002\u0002\u00a0\u009f\u0003\u0002",
    "\u0002\u0002\u00a1\u00a4\u0003\u0002\u0002\u0002\u00a2\u00a0\u0003\u0002",
    "\u0002\u0002\u00a2\u00a3\u0003\u0002\u0002\u0002\u00a3\u00a5\u0003\u0002",
    "\u0002\u0002\u00a4\u00a2\u0003\u0002\u0002\u0002\u00a5\u00a6\u0007$",
    "\u0002\u0002\u00a6,\u0003\u0002\u0002\u0002\u00a7\u00a9\t\u0007\u0002",
    "\u0002\u00a8\u00a7\u0003\u0002\u0002\u0002\u00a9\u00aa\u0003\u0002\u0002",
    "\u0002\u00aa\u00a8\u0003\u0002\u0002\u0002\u00aa\u00ab\u0003\u0002\u0002",
    "\u0002\u00ab.\u0003\u0002\u0002\u0002\u00ac\u00ae\t\b\u0002\u0002\u00ad",
    "\u00ac\u0003\u0002\u0002\u0002\u00ae\u00af\u0003\u0002\u0002\u0002\u00af",
    "\u00ad\u0003\u0002\u0002\u0002\u00af\u00b0\u0003\u0002\u0002\u0002\u00b0",
    "\u00b1\u0003\u0002\u0002\u0002\u00b1\u00b2\b\u0018\u0002\u0002\u00b2",
    "0\u0003\u0002\u0002\u0002\r\u00029DGk\u0081\u009a\u00a0\u00a2\u00aa",
    "\u00af\u0003\b\u0002\u0002"].join("");


var atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

var decisionsToDFA = atn.decisionToState.map( function(ds, index) { return new antlr4.dfa.DFA(ds, index); });

function grammarKSLexer(input) {
	antlr4.Lexer.call(this, input);
    this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());
    return this;
}

grammarKSLexer.prototype = Object.create(antlr4.Lexer.prototype);
grammarKSLexer.prototype.constructor = grammarKSLexer;

Object.defineProperty(grammarKSLexer.prototype, "atn", {
        get : function() {
                return atn;
        }
});

grammarKSLexer.EOF = antlr4.Token.EOF;
grammarKSLexer.SEMI = 1;
grammarKSLexer.COMMENT = 2;
grammarKSLexer.WHILE = 3;
grammarKSLexer.LP = 4;
grammarKSLexer.RP = 5;
grammarKSLexer.IF = 6;
grammarKSLexer.ELSE = 7;
grammarKSLexer.RETURN = 8;
grammarKSLexer.LBR = 9;
grammarKSLexer.RBR = 10;
grammarKSLexer.NUM = 11;
grammarKSLexer.OR = 12;
grammarKSLexer.AND = 13;
grammarKSLexer.NOT = 14;
grammarKSLexer.RELOP = 15;
grammarKSLexer.EQ = 16;
grammarKSLexer.PLUS = 17;
grammarKSLexer.MULOP = 18;
grammarKSLexer.MINUS = 19;
grammarKSLexer.TYPE = 20;
grammarKSLexer.STRING_CONSTANT = 21;
grammarKSLexer.ID = 22;
grammarKSLexer.WHITESPACE = 23;

grammarKSLexer.prototype.channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];

grammarKSLexer.prototype.modeNames = [ "DEFAULT_MODE" ];

grammarKSLexer.prototype.literalNames = [ null, "';'", null, "'while'", 
                                          "'('", "')'", "'if'", "'else'", 
                                          "'return'", "'{'", "'}'", null, 
                                          "'or'", "'and'", "'not'", null, 
                                          "'='", "'+'", null, "'-'" ];

grammarKSLexer.prototype.symbolicNames = [ null, "SEMI", "COMMENT", "WHILE", 
                                           "LP", "RP", "IF", "ELSE", "RETURN", 
                                           "LBR", "RBR", "NUM", "OR", "AND", 
                                           "NOT", "RELOP", "EQ", "PLUS", 
                                           "MULOP", "MINUS", "TYPE", "STRING_CONSTANT", 
                                           "ID", "WHITESPACE" ];

grammarKSLexer.prototype.ruleNames = [ "SEMI", "COMMENT", "WHILE", "LP", 
                                       "RP", "IF", "ELSE", "RETURN", "LBR", 
                                       "RBR", "NUM", "OR", "AND", "NOT", 
                                       "RELOP", "EQ", "PLUS", "MULOP", "MINUS", 
                                       "TYPE", "STRING_CONSTANT", "ID", 
                                       "WHITESPACE" ];

grammarKSLexer.prototype.grammarFileName = "grammarKS.txt";


exports.grammarKSLexer = grammarKSLexer;

