// Generated from grammar.txt by ANTLR 4.8
// jshint ignore: start
var antlr4 = require('antlr4/index');



var serializedATN = ["\u0003\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964",
    "\u0002$\u010e\b\u0001\u0004\u0002\t\u0002\u0004\u0003\t\u0003\u0004",
    "\u0004\t\u0004\u0004\u0005\t\u0005\u0004\u0006\t\u0006\u0004\u0007\t",
    "\u0007\u0004\b\t\b\u0004\t\t\t\u0004\n\t\n\u0004\u000b\t\u000b\u0004",
    "\f\t\f\u0004\r\t\r\u0004\u000e\t\u000e\u0004\u000f\t\u000f\u0004\u0010",
    "\t\u0010\u0004\u0011\t\u0011\u0004\u0012\t\u0012\u0004\u0013\t\u0013",
    "\u0004\u0014\t\u0014\u0004\u0015\t\u0015\u0004\u0016\t\u0016\u0004\u0017",
    "\t\u0017\u0004\u0018\t\u0018\u0004\u0019\t\u0019\u0004\u001a\t\u001a",
    "\u0004\u001b\t\u001b\u0004\u001c\t\u001c\u0004\u001d\t\u001d\u0004\u001e",
    "\t\u001e\u0004\u001f\t\u001f\u0004 \t \u0004!\t!\u0004\"\t\"\u0004#",
    "\t#\u0003\u0002\u0003\u0002\u0003\u0002\u0003\u0003\u0003\u0003\u0003",
    "\u0003\u0003\u0004\u0003\u0004\u0003\u0004\u0003\u0005\u0003\u0005\u0003",
    "\u0005\u0003\u0005\u0003\u0005\u0003\u0006\u0003\u0006\u0003\u0006\u0003",
    "\u0006\u0007\u0006Z\n\u0006\f\u0006\u000e\u0006]\u000b\u0006\u0003\u0006",
    "\u0003\u0006\u0003\u0006\u0003\u0007\u0003\u0007\u0003\b\u0003\b\u0003",
    "\b\u0003\b\u0003\b\u0003\b\u0003\t\u0003\t\u0003\n\u0003\n\u0003\u000b",
    "\u0003\u000b\u0003\u000b\u0003\f\u0003\f\u0003\f\u0003\f\u0003\f\u0003",
    "\r\u0003\r\u0003\r\u0003\r\u0003\r\u0003\r\u0003\r\u0003\u000e\u0003",
    "\u000e\u0003\u000f\u0003\u000f\u0003\u0010\u0006\u0010\u0082\n\u0010",
    "\r\u0010\u000e\u0010\u0083\u0003\u0010\u0003\u0010\u0007\u0010\u0088",
    "\n\u0010\f\u0010\u000e\u0010\u008b\u000b\u0010\u0003\u0010\u0003\u0010",
    "\u0006\u0010\u008f\n\u0010\r\u0010\u000e\u0010\u0090\u0003\u0010\u0006",
    "\u0010\u0094\n\u0010\r\u0010\u000e\u0010\u0095\u0005\u0010\u0098\n\u0010",
    "\u0003\u0011\u0006\u0011\u009b\n\u0011\r\u0011\u000e\u0011\u009c\u0003",
    "\u0011\u0003\u0011\u0006\u0011\u00a1\n\u0011\r\u0011\u000e\u0011\u00a2",
    "\u0005\u0011\u00a5\n\u0011\u0003\u0012\u0003\u0012\u0003\u0012\u0003",
    "\u0013\u0003\u0013\u0003\u0013\u0003\u0013\u0003\u0014\u0003\u0014\u0003",
    "\u0014\u0003\u0014\u0003\u0015\u0003\u0015\u0003\u0015\u0003\u0015\u0003",
    "\u0015\u0003\u0015\u0003\u0015\u0003\u0015\u0003\u0015\u0005\u0015\u00bb",
    "\n\u0015\u0003\u0016\u0003\u0016\u0003\u0017\u0003\u0017\u0003\u0018",
    "\u0003\u0018\u0003\u0019\u0003\u0019\u0003\u001a\u0003\u001a\u0003\u001b",
    "\u0003\u001b\u0003\u001b\u0003\u001b\u0003\u001b\u0003\u001b\u0003\u001b",
    "\u0003\u001b\u0003\u001b\u0003\u001b\u0003\u001b\u0003\u001b\u0003\u001b",
    "\u0003\u001b\u0003\u001b\u0003\u001b\u0003\u001b\u0003\u001b\u0003\u001b",
    "\u0003\u001b\u0003\u001c\u0003\u001c\u0003\u001c\u0003\u001c\u0007\u001c",
    "\u00df\n\u001c\f\u001c\u000e\u001c\u00e2\u000b\u001c\u0003\u001c\u0003",
    "\u001c\u0003\u001d\u0003\u001d\u0003\u001d\u0003\u001d\u0003\u001d\u0003",
    "\u001d\u0003\u001e\u0003\u001e\u0003\u001e\u0003\u001e\u0003\u001e\u0003",
    "\u001e\u0003\u001f\u0003\u001f\u0003\u001f\u0003\u001f\u0003\u001f\u0003",
    " \u0003 \u0003 \u0003 \u0003 \u0003!\u0003!\u0003!\u0003!\u0003!\u0003",
    "!\u0003\"\u0003\"\u0003\"\u0003\"\u0003\"\u0003\"\u0003#\u0003#\u0007",
    "#\u010a\n#\f#\u000e#\u010d\u000b#\u0003[\u0002$\u0003\u0003\u0005\u0004",
    "\u0007\u0005\t\u0006\u000b\u0007\r\b\u000f\t\u0011\n\u0013\u000b\u0015",
    "\f\u0017\r\u0019\u000e\u001b\u000f\u001d\u0010\u001f\u0011!\u0012#\u0013",
    "%\u0014\'\u0015)\u0016+\u0017-\u0018/\u00191\u001a3\u001b5\u001c7\u001d",
    "9\u001e;\u001f= ?!A\"C#E$\u0003\u0002\b\u0003\u00022;\u0004\u0002>>",
    "@@\u0004\u0002,,11\u0003\u0002$$\u0005\u0002C\\aac|\u0006\u00022;C\\",
    "aac|\u0002\u011e\u0002\u0003\u0003\u0002\u0002\u0002\u0002\u0005\u0003",
    "\u0002\u0002\u0002\u0002\u0007\u0003\u0002\u0002\u0002\u0002\t\u0003",
    "\u0002\u0002\u0002\u0002\u000b\u0003\u0002\u0002\u0002\u0002\r\u0003",
    "\u0002\u0002\u0002\u0002\u000f\u0003\u0002\u0002\u0002\u0002\u0011\u0003",
    "\u0002\u0002\u0002\u0002\u0013\u0003\u0002\u0002\u0002\u0002\u0015\u0003",
    "\u0002\u0002\u0002\u0002\u0017\u0003\u0002\u0002\u0002\u0002\u0019\u0003",
    "\u0002\u0002\u0002\u0002\u001b\u0003\u0002\u0002\u0002\u0002\u001d\u0003",
    "\u0002\u0002\u0002\u0002\u001f\u0003\u0002\u0002\u0002\u0002!\u0003",
    "\u0002\u0002\u0002\u0002#\u0003\u0002\u0002\u0002\u0002%\u0003\u0002",
    "\u0002\u0002\u0002\'\u0003\u0002\u0002\u0002\u0002)\u0003\u0002\u0002",
    "\u0002\u0002+\u0003\u0002\u0002\u0002\u0002-\u0003\u0002\u0002\u0002",
    "\u0002/\u0003\u0002\u0002\u0002\u00021\u0003\u0002\u0002\u0002\u0002",
    "3\u0003\u0002\u0002\u0002\u00025\u0003\u0002\u0002\u0002\u00027\u0003",
    "\u0002\u0002\u0002\u00029\u0003\u0002\u0002\u0002\u0002;\u0003\u0002",
    "\u0002\u0002\u0002=\u0003\u0002\u0002\u0002\u0002?\u0003\u0002\u0002",
    "\u0002\u0002A\u0003\u0002\u0002\u0002\u0002C\u0003\u0002\u0002\u0002",
    "\u0002E\u0003\u0002\u0002\u0002\u0003G\u0003\u0002\u0002\u0002\u0005",
    "J\u0003\u0002\u0002\u0002\u0007M\u0003\u0002\u0002\u0002\tP\u0003\u0002",
    "\u0002\u0002\u000bU\u0003\u0002\u0002\u0002\ra\u0003\u0002\u0002\u0002",
    "\u000fc\u0003\u0002\u0002\u0002\u0011i\u0003\u0002\u0002\u0002\u0013",
    "k\u0003\u0002\u0002\u0002\u0015m\u0003\u0002\u0002\u0002\u0017p\u0003",
    "\u0002\u0002\u0002\u0019u\u0003\u0002\u0002\u0002\u001b|\u0003\u0002",
    "\u0002\u0002\u001d~\u0003\u0002\u0002\u0002\u001f\u0097\u0003\u0002",
    "\u0002\u0002!\u00a4\u0003\u0002\u0002\u0002#\u00a6\u0003\u0002\u0002",
    "\u0002%\u00a9\u0003\u0002\u0002\u0002\'\u00ad\u0003\u0002\u0002\u0002",
    ")\u00ba\u0003\u0002\u0002\u0002+\u00bc\u0003\u0002\u0002\u0002-\u00be",
    "\u0003\u0002\u0002\u0002/\u00c0\u0003\u0002\u0002\u00021\u00c2\u0003",
    "\u0002\u0002\u00023\u00c4\u0003\u0002\u0002\u00025\u00c6\u0003\u0002",
    "\u0002\u00027\u00da\u0003\u0002\u0002\u00029\u00e5\u0003\u0002\u0002",
    "\u0002;\u00eb\u0003\u0002\u0002\u0002=\u00f1\u0003\u0002\u0002\u0002",
    "?\u00f6\u0003\u0002\u0002\u0002A\u00fb\u0003\u0002\u0002\u0002C\u0101",
    "\u0003\u0002\u0002\u0002E\u0107\u0003\u0002\u0002\u0002GH\u0007K\u0002",
    "\u0002HI\u0007H\u0002\u0002I\u0004\u0003\u0002\u0002\u0002JK\u0007N",
    "\u0002\u0002KL\u0007R\u0002\u0002L\u0006\u0003\u0002\u0002\u0002MN\u0007",
    "T\u0002\u0002NO\u0007R\u0002\u0002O\b\u0003\u0002\u0002\u0002PQ\u0007",
    "G\u0002\u0002QR\u0007N\u0002\u0002RS\u0007U\u0002\u0002ST\u0007G\u0002",
    "\u0002T\n\u0003\u0002\u0002\u0002UV\u00071\u0002\u0002VW\u0007,\u0002",
    "\u0002W[\u0003\u0002\u0002\u0002XZ\u000b\u0002\u0002\u0002YX\u0003\u0002",
    "\u0002\u0002Z]\u0003\u0002\u0002\u0002[\\\u0003\u0002\u0002\u0002[Y",
    "\u0003\u0002\u0002\u0002\\^\u0003\u0002\u0002\u0002][\u0003\u0002\u0002",
    "\u0002^_\u0007,\u0002\u0002_`\u00071\u0002\u0002`\f\u0003\u0002\u0002",
    "\u0002ab\u0007=\u0002\u0002b\u000e\u0003\u0002\u0002\u0002cd\u0007y",
    "\u0002\u0002de\u0007j\u0002\u0002ef\u0007k\u0002\u0002fg\u0007n\u0002",
    "\u0002gh\u0007g\u0002\u0002h\u0010\u0003\u0002\u0002\u0002ij\u0007*",
    "\u0002\u0002j\u0012\u0003\u0002\u0002\u0002kl\u0007+\u0002\u0002l\u0014",
    "\u0003\u0002\u0002\u0002mn\u0007k\u0002\u0002no\u0007h\u0002\u0002o",
    "\u0016\u0003\u0002\u0002\u0002pq\u0007g\u0002\u0002qr\u0007n\u0002\u0002",
    "rs\u0007u\u0002\u0002st\u0007g\u0002\u0002t\u0018\u0003\u0002\u0002",
    "\u0002uv\u0007t\u0002\u0002vw\u0007g\u0002\u0002wx\u0007v\u0002\u0002",
    "xy\u0007w\u0002\u0002yz\u0007t\u0002\u0002z{\u0007p\u0002\u0002{\u001a",
    "\u0003\u0002\u0002\u0002|}\u0007}\u0002\u0002}\u001c\u0003\u0002\u0002",
    "\u0002~\u007f\u0007\u007f\u0002\u0002\u007f\u001e\u0003\u0002\u0002",
    "\u0002\u0080\u0082\u00042;\u0002\u0081\u0080\u0003\u0002\u0002\u0002",
    "\u0082\u0083\u0003\u0002\u0002\u0002\u0083\u0081\u0003\u0002\u0002\u0002",
    "\u0083\u0084\u0003\u0002\u0002\u0002\u0084\u0085\u0003\u0002\u0002\u0002",
    "\u0085\u0089\u00070\u0002\u0002\u0086\u0088\u00042;\u0002\u0087\u0086",
    "\u0003\u0002\u0002\u0002\u0088\u008b\u0003\u0002\u0002\u0002\u0089\u0087",
    "\u0003\u0002\u0002\u0002\u0089\u008a\u0003\u0002\u0002\u0002\u008a\u0098",
    "\u0003\u0002\u0002\u0002\u008b\u0089\u0003\u0002\u0002\u0002\u008c\u008e",
    "\u00070\u0002\u0002\u008d\u008f\u00042;\u0002\u008e\u008d\u0003\u0002",
    "\u0002\u0002\u008f\u0090\u0003\u0002\u0002\u0002\u0090\u008e\u0003\u0002",
    "\u0002\u0002\u0090\u0091\u0003\u0002\u0002\u0002\u0091\u0098\u0003\u0002",
    "\u0002\u0002\u0092\u0094\u00042;\u0002\u0093\u0092\u0003\u0002\u0002",
    "\u0002\u0094\u0095\u0003\u0002\u0002\u0002\u0095\u0093\u0003\u0002\u0002",
    "\u0002\u0095\u0096\u0003\u0002\u0002\u0002\u0096\u0098\u0003\u0002\u0002",
    "\u0002\u0097\u0081\u0003\u0002\u0002\u0002\u0097\u008c\u0003\u0002\u0002",
    "\u0002\u0097\u0093\u0003\u0002\u0002\u0002\u0098 \u0003\u0002\u0002",
    "\u0002\u0099\u009b\t\u0002\u0002\u0002\u009a\u0099\u0003\u0002\u0002",
    "\u0002\u009b\u009c\u0003\u0002\u0002\u0002\u009c\u009a\u0003\u0002\u0002",
    "\u0002\u009c\u009d\u0003\u0002\u0002\u0002\u009d\u00a5\u0003\u0002\u0002",
    "\u0002\u009e\u00a0\u0007/\u0002\u0002\u009f\u00a1\t\u0002\u0002\u0002",
    "\u00a0\u009f\u0003\u0002\u0002\u0002\u00a1\u00a2\u0003\u0002\u0002\u0002",
    "\u00a2\u00a0\u0003\u0002\u0002\u0002\u00a2\u00a3\u0003\u0002\u0002\u0002",
    "\u00a3\u00a5\u0003\u0002\u0002\u0002\u00a4\u009a\u0003\u0002\u0002\u0002",
    "\u00a4\u009e\u0003\u0002\u0002\u0002\u00a5\"\u0003\u0002\u0002\u0002",
    "\u00a6\u00a7\u0007q\u0002\u0002\u00a7\u00a8\u0007t\u0002\u0002\u00a8",
    "$\u0003\u0002\u0002\u0002\u00a9\u00aa\u0007c\u0002\u0002\u00aa\u00ab",
    "\u0007p\u0002\u0002\u00ab\u00ac\u0007f\u0002\u0002\u00ac&\u0003\u0002",
    "\u0002\u0002\u00ad\u00ae\u0007p\u0002\u0002\u00ae\u00af\u0007q\u0002",
    "\u0002\u00af\u00b0\u0007v\u0002\u0002\u00b0(\u0003\u0002\u0002\u0002",
    "\u00b1\u00b2\u0007@\u0002\u0002\u00b2\u00bb\u0007?\u0002\u0002\u00b3",
    "\u00b4\u0007>\u0002\u0002\u00b4\u00bb\u0007?\u0002\u0002\u00b5\u00bb",
    "\t\u0003\u0002\u0002\u00b6\u00b7\u0007#\u0002\u0002\u00b7\u00bb\u0007",
    "?\u0002\u0002\u00b8\u00b9\u0007?\u0002\u0002\u00b9\u00bb\u0007?\u0002",
    "\u0002\u00ba\u00b1\u0003\u0002\u0002\u0002\u00ba\u00b3\u0003\u0002\u0002",
    "\u0002\u00ba\u00b5\u0003\u0002\u0002\u0002\u00ba\u00b6\u0003\u0002\u0002",
    "\u0002\u00ba\u00b8\u0003\u0002\u0002\u0002\u00bb*\u0003\u0002\u0002",
    "\u0002\u00bc\u00bd\u0007?\u0002\u0002\u00bd,\u0003\u0002\u0002\u0002",
    "\u00be\u00bf\u0007-\u0002\u0002\u00bf.\u0003\u0002\u0002\u0002\u00c0",
    "\u00c1\t\u0004\u0002\u0002\u00c10\u0003\u0002\u0002\u0002\u00c2\u00c3",
    "\u0007/\u0002\u0002\u00c32\u0003\u0002\u0002\u0002\u00c4\u00c5\u0007",
    ".\u0002\u0002\u00c54\u0003\u0002\u0002\u0002\u00c6\u00c7\u0007*\u0002",
    "\u0002\u00c7\u00c8\u0007k\u0002\u0002\u00c8\u00c9\u0007p\u0002\u0002",
    "\u00c9\u00ca\u0007v\u0002\u0002\u00ca\u00cb\u0007~\u0002\u0002\u00cb",
    "\u00cc\u0007u\u0002\u0002\u00cc\u00cd\u0007v\u0002\u0002\u00cd\u00ce",
    "\u0007t\u0002\u0002\u00ce\u00cf\u0007k\u0002\u0002\u00cf\u00d0\u0007",
    "p\u0002\u0002\u00d0\u00d1\u0007i\u0002\u0002\u00d1\u00d2\u0007~\u0002",
    "\u0002\u00d2\u00d3\u0007f\u0002\u0002\u00d3\u00d4\u0007q\u0002\u0002",
    "\u00d4\u00d5\u0007w\u0002\u0002\u00d5\u00d6\u0007d\u0002\u0002\u00d6",
    "\u00d7\u0007n\u0002\u0002\u00d7\u00d8\u0007g\u0002\u0002\u00d8\u00d9",
    "\u0007+\u0002\u0002\u00d96\u0003\u0002\u0002\u0002\u00da\u00e0\u0007",
    "$\u0002\u0002\u00db\u00dc\u0007^\u0002\u0002\u00dc\u00df\u0007$\u0002",
    "\u0002\u00dd\u00df\n\u0005\u0002\u0002\u00de\u00db\u0003\u0002\u0002",
    "\u0002\u00de\u00dd\u0003\u0002\u0002\u0002\u00df\u00e2\u0003\u0002\u0002",
    "\u0002\u00e0\u00de\u0003\u0002\u0002\u0002\u00e0\u00e1\u0003\u0002\u0002",
    "\u0002\u00e1\u00e3\u0003\u0002\u0002\u0002\u00e2\u00e0\u0003\u0002\u0002",
    "\u0002\u00e3\u00e4\u0007$\u0002\u0002\u00e48\u0003\u0002\u0002\u0002",
    "\u00e5\u00e6\u0007r\u0002\u0002\u00e6\u00e7\u0007t\u0002\u0002\u00e7",
    "\u00e8\u0007k\u0002\u0002\u00e8\u00e9\u0007p\u0002\u0002\u00e9\u00ea",
    "\u0007v\u0002\u0002\u00ea:\u0003\u0002\u0002\u0002\u00eb\u00ec\u0007",
    "k\u0002\u0002\u00ec\u00ed\u0007p\u0002\u0002\u00ed\u00ee\u0007r\u0002",
    "\u0002\u00ee\u00ef\u0007w\u0002\u0002\u00ef\u00f0\u0007v\u0002\u0002",
    "\u00f0<\u0003\u0002\u0002\u0002\u00f1\u00f2\u0007q\u0002\u0002\u00f2",
    "\u00f3\u0007r\u0002\u0002\u00f3\u00f4\u0007g\u0002\u0002\u00f4\u00f5",
    "\u0007p\u0002\u0002\u00f5>\u0003\u0002\u0002\u0002\u00f6\u00f7\u0007",
    "t\u0002\u0002\u00f7\u00f8\u0007g\u0002\u0002\u00f8\u00f9\u0007c\u0002",
    "\u0002\u00f9\u00fa\u0007f\u0002\u0002\u00fa@\u0003\u0002\u0002\u0002",
    "\u00fb\u00fc\u0007y\u0002\u0002\u00fc\u00fd\u0007t\u0002\u0002\u00fd",
    "\u00fe\u0007k\u0002\u0002\u00fe\u00ff\u0007v\u0002\u0002\u00ff\u0100",
    "\u0007g\u0002\u0002\u0100B\u0003\u0002\u0002\u0002\u0101\u0102\u0007",
    "e\u0002\u0002\u0102\u0103\u0007n\u0002\u0002\u0103\u0104\u0007q\u0002",
    "\u0002\u0104\u0105\u0007u\u0002\u0002\u0105\u0106\u0007g\u0002\u0002",
    "\u0106D\u0003\u0002\u0002\u0002\u0107\u010b\t\u0006\u0002\u0002\u0108",
    "\u010a\t\u0007\u0002\u0002\u0109\u0108\u0003\u0002\u0002\u0002\u010a",
    "\u010d\u0003\u0002\u0002\u0002\u010b\u0109\u0003\u0002\u0002\u0002\u010b",
    "\u010c\u0003\u0002\u0002\u0002\u010cF\u0003\u0002\u0002\u0002\u010d",
    "\u010b\u0003\u0002\u0002\u0002\u0010\u0002[\u0083\u0089\u0090\u0095",
    "\u0097\u009c\u00a2\u00a4\u00ba\u00de\u00e0\u010b\u0002"].join("");


var atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

var decisionsToDFA = atn.decisionToState.map( function(ds, index) { return new antlr4.dfa.DFA(ds, index); });

function g1Lexer(input) {
	antlr4.Lexer.call(this, input);
    this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());
    return this;
}

g1Lexer.prototype = Object.create(antlr4.Lexer.prototype);
g1Lexer.prototype.constructor = g1Lexer;

Object.defineProperty(g1Lexer.prototype, "atn", {
        get : function() {
                return atn;
        }
});

g1Lexer.EOF = antlr4.Token.EOF;
g1Lexer.T__0 = 1;
g1Lexer.T__1 = 2;
g1Lexer.T__2 = 3;
g1Lexer.T__3 = 4;
g1Lexer.COMMENT = 5;
g1Lexer.SEMI = 6;
g1Lexer.WHILE = 7;
g1Lexer.LP = 8;
g1Lexer.RP = 9;
g1Lexer.IF = 10;
g1Lexer.ELSE = 11;
g1Lexer.RETURN = 12;
g1Lexer.LBR = 13;
g1Lexer.RBR = 14;
g1Lexer.FPNUM = 15;
g1Lexer.NUM = 16;
g1Lexer.OR = 17;
g1Lexer.AND = 18;
g1Lexer.NOT = 19;
g1Lexer.RELOP = 20;
g1Lexer.EQ = 21;
g1Lexer.PLUS = 22;
g1Lexer.MULOP = 23;
g1Lexer.MINUS = 24;
g1Lexer.CMA = 25;
g1Lexer.TYPE = 26;
g1Lexer.STRING_CONSTANT = 27;
g1Lexer.PRINT = 28;
g1Lexer.INPUT = 29;
g1Lexer.OPEN = 30;
g1Lexer.READ = 31;
g1Lexer.WRITE = 32;
g1Lexer.CLOSE = 33;
g1Lexer.ID = 34;

g1Lexer.prototype.channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];

g1Lexer.prototype.modeNames = [ "DEFAULT_MODE" ];

g1Lexer.prototype.literalNames = [ null, "'IF'", "'LP'", "'RP'", "'ELSE'", 
                                   null, "';'", "'while'", "'('", "')'", 
                                   "'if'", "'else'", "'return'", "'{'", 
                                   "'}'", null, null, "'or'", "'and'", "'not'", 
                                   null, "'='", "'+'", null, "'-'", "','", 
                                   "'(int|string|double)'", null, "'print'", 
                                   "'input'", "'open'", "'read'", "'write'", 
                                   "'close'" ];

g1Lexer.prototype.symbolicNames = [ null, null, null, null, null, "COMMENT", 
                                    "SEMI", "WHILE", "LP", "RP", "IF", "ELSE", 
                                    "RETURN", "LBR", "RBR", "FPNUM", "NUM", 
                                    "OR", "AND", "NOT", "RELOP", "EQ", "PLUS", 
                                    "MULOP", "MINUS", "CMA", "TYPE", "STRING_CONSTANT", 
                                    "PRINT", "INPUT", "OPEN", "READ", "WRITE", 
                                    "CLOSE", "ID" ];

g1Lexer.prototype.ruleNames = [ "T__0", "T__1", "T__2", "T__3", "COMMENT", 
                                "SEMI", "WHILE", "LP", "RP", "IF", "ELSE", 
                                "RETURN", "LBR", "RBR", "FPNUM", "NUM", 
                                "OR", "AND", "NOT", "RELOP", "EQ", "PLUS", 
                                "MULOP", "MINUS", "CMA", "TYPE", "STRING_CONSTANT", 
                                "PRINT", "INPUT", "OPEN", "READ", "WRITE", 
                                "CLOSE", "ID" ];

g1Lexer.prototype.grammarFileName = "grammar.txt";


exports.g1Lexer = g1Lexer;

